<?php


/**
 *
 * @file
 * Taxonomy Manager
 *
 * Administration interface for managing taxonomy vocabularies
 *
 */

// Default value for the tree pager. Value can be overridden with the variable
// taxonomy_manager_pager_tree_page_size.
define('TAXONOMY_MANAGER_PAGER_TREE_PAGE_SIZE_DEFAULT', 500);

/**
 * Implements hook_menu().
 */
function taxonomy_manager_menu() {

  $items['admin/structure/taxonomy_manager/voc'] = array(
    'title' => 'Taxonomy Manager',
    'description' => 'Administer vocabularies with the Taxonomy Manager',
    'page callback' => 'taxonomy_manager_voc_list',
    'access arguments' => array('administer taxonomy'),
    'file' => 'taxonomy_manager.admin.inc',
  );

  $items['admin/structure/taxonomy_manager/voc/%taxonomy_vocabulary_machine_name'] = array(
    'title callback' => 'taxonomy_admin_vocabulary_title_callback',
    'title arguments' => array(4),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('taxonomy_manager_form', 4),
    'access arguments' => array('administer taxonomy'),
    'file' => 'taxonomy_manager.admin.inc',
  );

  $items['admin/structure/taxonomy_manager/childform'] = array(
    'page callback' => 'taxonomy_manager_tree_build_child_form',
    'access arguments' => array('administer taxonomy'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/structure/taxonomy_manager/weight'] = array(
    'page callback' => 'taxonomy_manager_update_weights',
    'access arguments' => array('administer taxonomy'),
    'type' => MENU_CALLBACK,
    'file' => 'taxonomy_manager.admin.inc',
  );

  $items['admin/structure/taxonomy_manager/siblingsform'] = array(
    'page callback' => 'taxonomy_manager_tree_build_siblings_form',
    'access arguments' => array('administer taxonomy'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/structure/taxonomy_manager/export'] = array(
    'page callback' => 'taxonomy_manager_export',
    'access arguments' => array('administer taxonomy'),
    'type' => MENU_CALLBACK,
    'file' => 'taxonomy_manager.admin.inc',
  );

  $items['admin/structure/taxonomy_manager/double-tree/%taxonomy_vocabulary_machine_name/%taxonomy_vocabulary_machine_name'] = array(
    'title' => 'Taxonomy Manager',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('taxonomy_manager_double_tree_form', 4, 5),
    'access arguments' => array('administer taxonomy'),
    'file' => 'taxonomy_manager.admin.inc',
  );

  $items['admin/config/user-interface/taxonomy-manager-settings'] = array(
    'title' => 'Taxonomy Manager',
    'description' => 'Advanced settings for the Taxonomy Manager',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('taxonomy_manager_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'taxonomy_manager.admin.inc',
  );

  $items['taxonomy_manager/autocomplete'] = array(
    'title' => 'Taxonomy Manager Autocomplete',
    'page callback' => 'taxonomy_manager_autocomplete_load',
    'access arguments' => array('administer taxonomy'),
    'type' => MENU_CALLBACK,
    'file' => 'taxonomy_manager.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_admin_menu_map().
 */
function taxonomy_manager_admin_menu_map() {
  if (!user_access('administer taxonomy')) {
    return;
  }
  $map['admin/structure/taxonomy_manager/voc/%taxonomy_vocabulary_machine_name'] = array(
    'parent' => 'admin/structure/taxonomy_manager/voc',
    'arguments' => array(
      array('%taxonomy_vocabulary_machine_name' => array_keys(taxonomy_vocabulary_get_names())),
    ),
  );
  return $map;
}

/**
 * Implements hook_help().
 */
function taxonomy_manager_help($path, $arg) {
  switch ($path) {
    case 'admin/help#taxonomy_manager':
      $output = t('The Taxonomy Manager provides an additional interface for managing vocabularies of the taxonomy module. It\'s especially very useful for long sets of terms.
                   The vocabulary is represented in a dynamic tree view.
                   It supports operation like mass adding and deleting of terms, fast weight editing, moving of terms in hierarchies, merging of terms and fast term data editing.
                   For more information on how to use please read the readme file included in the taxonomy_manager directory.');
      return $output;
  }
}


/**
 * function gets called by the taxonomy_manager_tree form type ('taxonomy_manager_'. form_id .'_operations')
 * return an form array with values to show next to every term value
 */
function taxonomy_manager_taxonomy_manager_tree_operations($term) {
  $form = array();
  if (!variable_get('taxonomy_manager_disable_mouseover', 0)) {
    $module_path = drupal_get_path('module', 'taxonomy_manager') . '/';
    if (_taxonomy_manager_tree_term_children_count($term->tid) > 0) {
      $form['select_all'] = array('#weight' => -1, '#markup' => '<span class="select-all-children" title="' . t("Select all children") . '">&nbsp;&nbsp;&nbsp;&nbsp;</span>');
    }
    $form['up'] = array('#markup' => theme("image", array('path' => $module_path . "images/go-up-small.png", 'alt' => "go up", 'title' => t("Move up"), 'attributes' => array('class' => 'term-up'))));
    $form['down'] = array('#markup' => theme("image", array('path' => $module_path . "images/go-down-small.png", 'alt' => "go down", 'title' => t("Move down"), 'attributes' => array('class' => 'term-down'))));
    $link_img = theme("image", array('path' => $module_path . "images/link-small.png", 'alt' => "link to term page"));
    $link = l('&nbsp;' . $link_img, 'taxonomy/term/' . $term->tid, array('attributes' => array('rel' => 'tag', 'title' => t("Go to term page"), 'target' => '_blank'), 'html' => TRUE));
    $form['link'] = array('#markup' => $link, '#weight' => 10);
  }
  return $form;
}

/**
 * function gets called by taxonomy_manager_tree form type ('taxonomy_manager_'. form_id .'_link')
 * and returns an link, where to go, when a term gets clicked
 *
 * @param $vid vocabulary id
 */
function taxonomy_manager_taxonomy_manager_tree_link($term) {
  return "admin/structure/taxonomy_manager/termdata/" . $term->tid;
}

function taxonomy_manager_taxonomy2_manager_tree_operations($term) {
  return taxonomy_manager_taxonomy_manager_tree_operations($term);
}
function taxonomy_manager_taxonomy2_manager_tree_link($term) {
  return taxonomy_manager_taxonomy_manager_tree_link($term);
}
